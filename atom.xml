<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>哦的博客</title>
  <icon>https://www.gravatar.com/avatar/9cef909e3d07924c136bfbe82800f397</icon>
  <subtitle>你终于来了，我等你很久了呦！</subtitle>
  <link href="https://www.woshipan.github.io.com/atom.xml" rel="self"/>
  
  <link href="https://www.woshipan.github.io.com/"/>
  <updated>2024-12-06T05:03:26.431Z</updated>
  <id>https://www.woshipan.github.io.com/</id>
  
  <author>
    <name>彭于晏</name>
    <email>2420940480@qq.com</email>
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Buuctf-Web-[极客大挑战 2019]EasySQL 1 题解及思路总结</title>
    <link href="https://www.woshipan.github.io.com/2024/12/06/Buuctf-Web-%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019-EasySQL-1-%E9%A2%98%E8%A7%A3%E5%8F%8A%E6%80%9D%E8%B7%AF%E6%80%BB%E7%BB%93/"/>
    <id>https://www.woshipan.github.io.com/2024/12/06/Buuctf-Web-%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019-EasySQL-1-%E9%A2%98%E8%A7%A3%E5%8F%8A%E6%80%9D%E8%B7%AF%E6%80%BB%E7%BB%93/</id>
    <published>2024-12-06T04:54:14.000Z</published>
    <updated>2024-12-06T05:03:26.431Z</updated>
    
    <content type="html"><![CDATA[<p>目录<br>题要<br>做题过程<br>第一步——找到页面与数据库产生交互的地方<br>第二步——查看SQL语句闭合方式<br>判断SQL注入闭合方式：<br>方法一：使用(转义字符)来判断SQL注入的闭合方式<br>方法二：输入1、1’、1”判断SQL语句闭合方式<br>第三步——进行SQL注入<br>方法一：万能账号密码<br>方法二：使用HackBar进行SQL注入<br>一、查看页面的传参方式<br>二、使用HackBar进行SQL注入<br>思路总结<br>题目类型：<br>做题步骤：</p><p>题要<br>1.有数据交互的地方就容易产生注入点<br>2.sql注入的核心：将用户输入的数据拼接到代码中，并被当成 sql 语句执行</p><p>做题过程<br>第一步——找到页面与数据库产生交互的地方<br>输入任意数据，然后点击登录</p><p>此时跳转到check.php页面，得到结果。可知此页面与数据库产生交互</p><p>第二步——查看SQL语句闭合方式<br>知识点：如何判断闭合符</p><p>判断SQL语句闭合方式原理：</p><p>MYSQL数据库的包容性比较强。例如输入1)、1”、1-等，这些数字后面的字符不是闭合符，所以数据库会把这些输入的错误数据转换成正确的数据类型。<br>但是，若输入的数字后面的字符恰好是闭合符，则会形成闭合。如果闭合后形成的sql语句是错误的，那么sql语句执行就会错误，从而造成页面显示错误。</p><p>判断SQL注入闭合方式：<br>方法一：使用(转义字符)来判断SQL注入的闭合方式<br>原理：当闭合字符遇到转义字符时，会被转义，那么没有闭合符的语句就不完整了，就会报错，通过报错信息我们就可以推断出闭合符。</p><p>分析报错信息：看\斜杠后面跟着的字符，是什么字符，它的闭合字符就是什么，若是没有，就为数字型。<br>（但是在本题中有两个变量，这个方法不太适用）</p><p>方法二：输入1、1’、1”判断SQL语句闭合方式<br>以用户名为例（在密码处是一样的）<br>用户名分别输入1、1’、1”，密码输入123</p><p>在用户名处输入1、1”时  都出现了同样的结果</p><p>只在输入1’时，出现了报错</p><p>知识点：MySQL中单引号、双引号的区别</p><p>一般情况下，SQL语句闭合方式为单引号</p><p>输入1、1”时，没有SQL语句报错，只是提示我们输入的值是不对的，因此我们可以先假设SQL语句闭合方式是单引号</p><p>username输入1时，形成的sql语句是SELECT*FROM table_name WHERE username&#x3D;’1’and password&#x3D;’123’;</p><p>username输入1”时，形成的sql语句是正确的<br>SELECT*FROM table_name WHERE username&#x3D;’1”‘and password&#x3D;’123’;<br>当字符串内需要包含双引号时，除了使用转义字符外，也可以使用一对单引号来包括字符串。字符串内的双引号被视为普通字符，无需特殊处理<br>同理，当字符串内需要包含单引号时，除了使用转义字符外，也可以使用一对双引号来包括字符串。字符串内的单引号被视为普通字符，无需特殊处理</p><p>username输入的是1’，形成的sql语句是错误的<br>SELECT*FROM table_name WHERE username&#x3D;’1’’and password&#x3D;’123’;<br>第一个单引号和第二个单引号形成了新的闭合，剩余第三个单引号，组成的sql语句不正确，于是语句报错。</p><p>所以可以推出SQL语句闭合方式是单引号。</p><p>假设SQL语句是双引号闭合的情况</p><p>username输入1时，形成的sql语句是正确的<br>SELECT*FROM table_name WHERE username&#x3D;”1”and password&#x3D;”123”;</p><p>username输入1”时，形成的sql语句是<br>SELECT*FROM table_name WHERE username&#x3D;”1””and password&#x3D;”123”;<br>正确的SQL语句不可以出现一对双引号包含双引号的。所以上面这条应该出现SQL报错，但实际没有报错，因此我们假设的双引号闭合方式是不成立的。</p><p>username输入的是1’，形成的sql语句是正确的，不会报错<br>SELECT*FROM table_name WHERE username&#x3D;”1’”and password&#x3D;”123”;<br>而然实际上这条语句报错了，因此我们假设的双引号闭合方式是不成立的。</p><p>综上，我们可以推出SQL语句闭合方式是单引号。</p><p>第三步——进行SQL注入<br>方法一：万能账号密码<br>知识点:万能账号密码原理</p><p>一般来说，有账号密码登陆的题，在判断完闭合方式后，可以尝试先用万能账号密码解题</p><p>由第二步知，该数据库闭合方式为单引号’<br>所以此处使用单引号字符型的万能密码，即可获得正确的flag<br>(用户名和密码至少有一个输入万能密码即可获得正确的flag）<br>得到正确的flag<br>flag{938bf795-3f35-4edd-abd3-b23640b93d11}<br>————————————————</p><p>方法二：使用HackBar进行SQL注入<br>（思路和万能密码是一致的，这里学习一下HackBar的使用方式）</p><p>一、查看页面的传参方式<br>知识点：POST请求和GET请求如何传递和接收解析参数</p><p>随便输入一些数字（用户：111，密码：111）</p><p>先看界面中的url，可以看到我们输入的账号密码都显示在url中，可知此处是get传参<br>——&gt;这个界面是check.php页面<br>——&gt;所以我们可以用HackBar进行SQL注入<br>————————————————</p><p>GET比POST更不安全，因为GET参数会直接暴露在url上。所以不能用来传递敏感信息</p><p>?表示传参，后面跟着的是参数username&#x3D;aaa&amp;password&#x3D;111。一般来说，?的内容都是用户可控的。</p><p>传入SQL语句可控参数分为两类</p><p>数字类型，参数不用被引号引用?passord&#x3D;111<br>其他类型，参数需要被引号引用 ?username&#x3D;”aaa”<br>二、使用HackBar进行SQL注入<br>知识点:POST和GET请求参数编码方式<br>————————————————<br>Load URL（加载网址）:将网址“框”下来<br>Split URL（切分网址）：自动切分网址，便于快速找出需要修的地方<br>Execute（执行）：相当于F5</p><p>GET传参要经过url编码，所以使用url进行输入时，不能使用#，而应该使用其url编码%23</p><p>3.然后点击“Execute”，即可获得正确flag</p><p>思路总结<br>题目类型：<br>SQL注入<br>做题步骤：<br>先找到页面中有数据交互的地方<br>判断SQL语句的闭合方式<br>进行SQL注入（万能密码&#x2F;Hackbar）<br>————————————————</p><pre><code>                        版权声明：本文为博主原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接和本声明。                    </code></pre><p>原文链接：<a href="https://blog.csdn.net/m0_62239233/article/details/132916255">https://blog.csdn.net/m0_62239233/article/details/132916255</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;目录&lt;br&gt;题要&lt;br&gt;做题过程&lt;br&gt;第一步——找到页面与数据库产生交互的地方&lt;br&gt;第二步——查看SQL语句闭合方式&lt;br&gt;判断SQL注入闭合方式：&lt;br&gt;方法一：使用(转义字符)来判断SQL注入的闭合方式&lt;br&gt;方法二：输入1、1’、1”判断SQL语句闭合方式&lt;br&gt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>自律吧，少年</title>
    <link href="https://www.woshipan.github.io.com/2024/12/06/%E8%87%AA%E5%BE%8B%E5%90%A7%EF%BC%8C%E5%B0%91%E5%B9%B4/"/>
    <id>https://www.woshipan.github.io.com/2024/12/06/%E8%87%AA%E5%BE%8B%E5%90%A7%EF%BC%8C%E5%B0%91%E5%B9%B4/</id>
    <published>2024-12-06T04:42:34.000Z</published>
    <updated>2024-12-06T04:49:41.341Z</updated>
    
    <content type="html"><![CDATA[<p>男生只要坚持健身一年，变化能有多大？首先你的饮食变得干净，皮肤变好了，<br>规律的健身，远离了不良的生活习惯，能更好的安排自己的生活，圈子变得干净了，<br>长期做力量训练，身材好了肌肉大了，更能减少大部分的痛苦。更重要的是健身让你<br>变得自信，敢于直视她的眼睛了，男生健身包帅的呀!</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;男生只要坚持健身一年，变化能有多大？首先你的饮食变得干净，皮肤变好了，&lt;br&gt;规律的健身，远离了不良的生活习惯，能更好的安排自己的生活，圈子变得干净了，&lt;br&gt;长期做力量训练，身材好了肌肉大了，更能减少大部分的痛苦。更重要的是健身让你&lt;br&gt;变得自信，敢于直视她的眼睛了，男</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://www.woshipan.github.io.com/2024/11/21/hello-world/"/>
    <id>https://www.woshipan.github.io.com/2024/11/21/hello-world/</id>
    <published>2024-11-21T03:23:42.535Z</published>
    <updated>2024-11-21T03:23:42.535Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
